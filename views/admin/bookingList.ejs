<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href="/css/style1.css">
    <title>Booking Details</title>

    <style>
    
        h1 {
            text-align: center;
            color: #333;
        }
        .search-bar {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0;
        }
        .search-bar input,
        .search-bar select,
        .search-bar button {
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }
        .search-bar button {
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        .search-bar button:hover {
            background-color: #45a049;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: #fff;
        }
        th,
        td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        .status-confirmed {
            color: green;
        }
        .status-pending {
            color: orange;
        }
        .status-cancelled {
            color: red;
        }
        .allocate-btn {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
        }
        .allocate-btn:hover {
            background-color: #45a049;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            position: relative;
        }
        .close {
            color: #aaa;
            position: absolute;
            top: 10px;
            right: 20px;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
        }
        .room-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        .room-item {
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    </style>
</head>
<body>
  
    <%- include('../partials/adminNav') %>
    <h1>Booking Details</h1>
    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Search by Booking ID or Customer Name">
        <select id="statusFilter">
            <option value="">All Statuses</option>
            <option value="confirmed">Confirmed</option>
            <option value="pending">Pending</option>
            <option value="cancelled">Cancelled</option>
        </select>
        <button onclick="filterBookings()">Search</button>
    </div>
    <table>
        <thead>
            <tr>
                <th>Booking ID</th>
                <th>Customer Name</th>
                <th>Room Type</th>
                <th>Allocated Room</th>
                <th>Payment Status</th>
                <th>Check In Date</th>
                <th>Check Out Date</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="bookingTableBody">
            <% bookings.forEach(booking => { %>
                <tr>
                    <td><%= booking._id %></td>
                    <td><%= booking.firstName %></td>
                    <td><%= booking.room ? booking.room.category : '-' %></td>
                    <td><%= booking.roomNo ? booking.roomNo : '-' %></td>
                    <td><%= booking.payment ? booking.payment.status : '-' %></td>
                    <td><%= new Date(booking.checkIn.date).toLocaleDateString('en-GB') %></td>
                    <td><%= new Date(booking.checkOut.date).toLocaleDateString('en-GB') %></td>
                    <td class="status-<%= booking.status.toLowerCase() %>"><%= booking.status %></td>
                    <td>
                        <% if (booking.roomNo) { %>
                            <% if (booking.checkOut.status === "checkedOut") { %>
                                <button class="allocate-btn" disabled style="background-color: #d3d3d3; color: #666; cursor: not-allowed;">Checked Out</button>
                            <% } else { %>
                                <button class="allocate-btn" onclick="checkoutRoom('<%= booking._id %>')">Checkout</button>
                            <% } %>
                        <% } else if (booking.status.toLowerCase() === "confirmed") { %>
                            <button class="allocate-btn" onclick="showModal('<%= booking._id %>', '<%= booking.room.category %>')">Allocate Room</button>
                        <% } else if (booking.status.toLowerCase() === "pending") { %>
                            <button class="allocate-btn" onclick="confirmBooking('<%= booking._id %>')">Confirm Booking</button>
                        <% } else if (booking.status.toLowerCase() === "cancelled") { %>
                            <button class="allocate-btn" disabled style="background-color: #d3d3d3; color: #666; cursor: not-allowed;">Confirm Booking</button>
                        <% } %>
                    </td>
                    <div id="myModal" class="modal">
                        <div class="modal-content">
                          <span class="close" onclick="closeModal()">&times;</span>
                          <h2>Available Rooms</h2>
                          <ul id="roomList" class="room-list">
                            <% rooms.forEach(room => { %>
                              <% if (Array.isArray(room.roomNumbers)) { %>
                                <% room.roomNumbers.forEach(num => { %>
                                  <% if (num.available === true) { %>
                                    <li 
                                      class="room-item" 
                                      data-room-type="<%= room.category %>" 
                                      data-city="<%= room.city %>">
                                      Room <%= room.category %> - <%= room.city %> - Room No: <%= num.roomNo %> 
                                      <button class="allocate-btn" 
                                        onclick="allocateRoom('<%= room._id %>', '<%= num.roomNo %>', currentBookingId)">
                                        Allocate
                                      </button>
                                    </li>
                                  <% } %>
                                <% }); %>
                              <% } %>
                            <% }); %>
                          </ul>
                        </div>
                      </div>
                </tr>
                
                  
            <% }); %>

        </tbody>
    </table>


     
      
    

    <script>
        var bookingsData = <%- JSON.stringify(bookings) %>;
        console.log("Booking data:", bookingsData);
        var currentBookingId = null;
        var roomsData = <%- JSON.stringify(rooms) %>;
        
        console.log("roooms data:", roomsData);
        function filterBookings() {
            const searchInput = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;
            const tableBody = document.getElementById('bookingTableBody');
            const rows = tableBody.getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName('td');
                const id = cells[0].innerText.toLowerCase();
                const name = cells[1].innerText.toLowerCase();
                const status = cells[7].innerText.toLowerCase();

                if ((id.includes(searchInput) || name.includes(searchInput)) && (statusFilter === '' || status === statusFilter)) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }


        
        function showModal(bookingId, roomType) {
            const modal = document.getElementById('myModal');
            const roomList = document.getElementById('roomList');
            const roomItems = roomList.getElementsByClassName('room-item');

            // Find the booking by its ID to get the city
            const booking = bookingsData.find(b => b._id === bookingId);
            if (!booking || !booking.city) {
                console.error("Booking not found or city is missing!");
                return; // Exit if no valid booking is found
            }
            const bookingCity = booking.city;

            // Set the global currentBookingId using the selected bookingId
            currentBookingId = bookingId;

            // Filter rooms based on roomType and bookingCity
            for (let i = 0; i < roomItems.length; i++) {
                const isMatchingType = roomItems[i].getAttribute('data-room-type') === roomType;
                const isMatchingCity = roomItems[i].getAttribute('data-city') === bookingCity;

                // Show the list item if both conditions are met
                roomItems[i].style.display = isMatchingType && isMatchingCity ? 'flex' : 'none';
            }

            // Display the modal
            modal.style.display = "block";
        }
        function closeModal() {
            document.getElementById('myModal').style.display = "none";
        }



        // Global variable to store the booking id when a modal is opened

        function allocateRoom(roomId, roomNo, selectedBookingId) {
            fetch(`/api/admin/allocateRoom/${selectedBookingId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ roomId: roomId, roomNo: Number(roomNo) })
            })
            .then(response => {
            if (!response.ok) {
                throw new Error('Unable to allocate room.');
            }
            return response.json();
            })
            .then(data => {
            alert(data.message);
            closeModal();
            location.reload(); // Optionally update the table or reload the page
            })
            .catch(error => {
            console.error('Error:', error);
            alert('Error allocating room.');
            });
        }

        function confirmBooking(bookingId) {
            fetch(`/api/confirmBooking/${bookingId}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            }
            })
            .then(response => {
            if (!response.ok) {
                throw new Error('Unable to confirm booking.');
            }
            return response.json();
            })
            .then(data => {
            alert(data.message);
            // Optionally update the table or reload the page to reflect changes.
            location.reload();
            })
            .catch(error => {
            console.error('Error:', error);
            alert('Error confirming booking.');
            });
        }

        function checkoutRoom(bookingId) {
            fetch(`/api/checkout/${bookingId}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            }
            })
            .then(response => {
            if (!response.ok) {
                throw new Error('Unable to checkout room.');
            }
            return response.json();
            })
            .then(data => {
            alert(data.message);
            location.reload();
            })
            .catch(error => {
            console.error('Error:', error);
            alert('Error during checkout.');
            });
        }
    </script>
</body>
</html>
